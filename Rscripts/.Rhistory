require(raster)
# This scripts creates a 100x100 random raster for elevation using unform distribution
# and a Gaussian Kernel to generate spatial autocorrelation and smooth the lattice.
#Create 100x100 random raster with a Z (altitude) range of min-max
raster <- raster(ncols=107, nrows=107, xmn=-53, xmx=53, ymn=-53, ymx=53 )
raster[] <- runif(ncell(r_unif), min = 100, max = 1000)
# Gaussian Kernel Function
GaussianKernel <- function(sigma=s, n=d) {
m <- matrix(nc=n, nr=n)
col <- rep(1:n, n)
row <- rep(1:n, each=n)
x <- col - ceiling(n/2)
y <- row - ceiling(n/2)
m[cbind(row, col)] <- 1/(2*pi*sigma^2) * exp(-(x^2+y^2)/(2*sigma^2))
m / sum(m)
}
# Create autocorrelated raster using 9x9 Gaussian Kernel with a sigma of 1
r.sim <- focal(raster, w=GaussianKernel(sigma=1, n=9))
# Crop 100x100 raster
e <- as(extent(-49, 50, -49, 50), 'SpatialPolygons')
crs(e) <- crs(r.sim)
r.final <- crop(r.sim, e)
plot(r.final)
# Generate raster file
writeRaster(r.final, "C://NetLogo_models/Thesis/rasterFile.asc", format = "ascii", overwrite= T)
require(raster)
# This scripts creates a 100x100 random raster for elevation using unform distribution
# and a Gaussian Kernel to generate spatial autocorrelation and smooth the lattice.
#Create 100x100 random raster with a Z (altitude) range of min-max
raster <- raster(ncols=107, nrows=107, xmn=-53, xmx=53, ymn=-53, ymx=53 )
raster[] <- runif(ncell(r_unif), min = 100, max = 1000)
# Gaussian Kernel Function
GaussianKernel <- function(sigma=s, n=d) {
m <- matrix(nc=n, nr=n)
col <- rep(1:n, n)
row <- rep(1:n, each=n)
x <- col - ceiling(n/2)
y <- row - ceiling(n/2)
m[cbind(row, col)] <- 1/(2*pi*sigma^2) * exp(-(x^2+y^2)/(2*sigma^2))
m / sum(m)
}
# Create autocorrelated raster using 9x9 Gaussian Kernel with a sigma of 1
r.sim <- focal(raster, w=GaussianKernel(sigma=1, n=9))
# Crop 100x100 raster
e <- as(extent(-49, 50, -49, 50), 'SpatialPolygons')
crs(e) <- crs(r.sim)
r.final <- crop(r.sim, e)
plot(r.final)
# Generate raster file
writeRaster(r.final, "C://NetLogo_models/Thesis/rasterFile.asc", format = "ascii")
require(raster)
# This scripts creates a 100x100 random raster for elevation using unform distribution
# and a Gaussian Kernel to generate spatial autocorrelation and smooth the lattice.
#Create 100x100 random raster with a Z (altitude) range of min-max
raster <- raster(ncols=107, nrows=107, xmn=-53, xmx=53, ymn=-53, ymx=53 )
raster[] <- runif(ncell(raster), min = 100, max = 1000)
# Gaussian Kernel Function
GaussianKernel <- function(sigma=s, n=d) {
m <- matrix(nc=n, nr=n)
col <- rep(1:n, n)
row <- rep(1:n, each=n)
x <- col - ceiling(n/2)
y <- row - ceiling(n/2)
m[cbind(row, col)] <- 1/(2*pi*sigma^2) * exp(-(x^2+y^2)/(2*sigma^2))
m / sum(m)
}
# Create autocorrelated raster using 9x9 Gaussian Kernel with a sigma of 1
r.sim <- focal(raster, w=GaussianKernel(sigma=1, n=9))
# Crop 100x100 raster
e <- as(extent(-49, 50, -49, 50), 'SpatialPolygons')
crs(e) <- crs(r.sim)
r.final <- crop(r.sim, e)
plot(r.final)
# Generate raster file
writeRaster(r.final, "C://NetLogo_models/Thesis/rasterFile.asc",
format = "ascii", overwrite = T)
x <- N
x
